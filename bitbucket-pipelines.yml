# This is a sample build configuration for JavaScript.
# Check our guides at https://confluence.atlassian.com/x/14UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: node:10.15.0

pipelines:
  default:
    - step:
        name: Run NPM Install
        caches:
          - node
        script: 
          - npm install
    - step:
        name: Run Node Tests
        caches:
          - node
        script:
          - npm test
          
    - step:
        name: Build and Push Docker Image
        image: google/cloud-sdk:latest
        script:
        - apt-get install google-cloud-sdk-gke-gcloud-auth-plugin
        - echo $GCLOUD_API_KEYFILE > ~/.gcloud-api-key.json
        - gcloud auth activate-service-account --key-file ~/.gcloud-api-key.json
        - docker login -u _json_key --password-stdin https://$DOCKER_GCR_REPO_URL < ~/.gcloud-api-key.json

        - docker build -t $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} .

        - docker tag $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

        - docker push $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

#        - gcloud container clusters get-credentials $K8s_CLUSTER_NAME --zone=$GCLOUD_ZONE --project $GCLOUD_PROJECT_ID
        - gcloud container clusters get-credentials autopilot-cluster-1 --region us-central1 --project forward-camera-317410
# DEPLOYMENT
        - kubectl create namespace $BITBUCKET_BRANCH  --dry-run=client -o yaml | kubectl apply -f -
        - kubectl set image deployment $K8s_DEPLOYMENT_NAME $K8s_DEPLOYMENT_NAME=$DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} --record --namespace=$BITBUCKET_BRANCH  

           # DEPLOYMENT
#        - kubectl set image deployment $K8s_DEPLOYMENT_NAME $K8s_DEPLOYMENT_NAME=$DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} --record --namespace=$K8s_NAMESPACE


#    - step:
#        name: Build Docker Image
#        image: atlassian/pipelines-awscli
#        script:
#          - echo $(aws ecr get-login --no-include-email --region us-west-2)  > login.sh

#          - sh login.sh

#          - docker build -t $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} .

#          - docker tag $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} $DOCKER_ECR_REPO_URL/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

#          - docker push $DOCKER_ECR_REPO_URL/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

options:
  docker: true